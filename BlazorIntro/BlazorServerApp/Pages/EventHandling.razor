@page "/event-handling";

<h1>
    Event Handling
</h1>

@* attach to events *@

<input type="checkbox" class="form-check-input" @onchange="CheckChanged" />

<br />
<p>
    @Message
</p>

<hr />

@* 
   capture event arguments 
    https://docs.microsoft.com/en-us/aspnet/core/blazor/event-handling?view=aspnetcore-3.1#event-argument-types
*@

<button class="btn btn-primary" @onclick="UpdateHeading">
    Update heading
</button>

<p>
    @ButtonMessage
</p>

<hr />

@* use lambdas *@

<h5>@_message</h5>

@for (var i = 1; i < 4; i++)
{
    var buttonNumber = i;

    <button class="btn btn-primary"
            @onclick="@(e => UpdateHeading(e, buttonNumber))">
        Button #@i
    </button>
}

@code {
    private string Message { get; set; }

    private string ButtonMessage { get; set; }

    private void CheckChanged()
    {
        Message = $"Check changed at {DateTime.Now}";
    }

    private async Task UpdateHeading(MouseEventArgs e)
    {
        await Task.Delay(100);
        ButtonMessage = $"Button was clicked at {DateTime.Now}";
    }

    private string _message = "Select a button to learn its position.";

    private void UpdateHeading(MouseEventArgs e, int buttonNumber)
    {
        _message = $"You selected Button #{buttonNumber} at " +
            $"mouse position: {e.ClientX} X {e.ClientY}.";
    }
}